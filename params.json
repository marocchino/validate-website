{"name":"Validate-website","tagline":"Web crawler for checking the validity of your documents.","body":"validate-website\r\n================\r\n\r\nDescription\r\n===========\r\n\r\nWeb crawler for checking the validity of your documents\r\n\r\nINSTALLATION\r\n============\r\n\r\nDebian\r\n------\r\n\r\n``` bash\r\n  aptitude install rubygems ruby-dev libxslt-dev libxml2-dev\r\n```\r\n\r\nRubyGems\r\n--------\r\n\r\n``` bash\r\n  gem install validate-website\r\n```\r\n\r\nSYNOPSIS\r\n========\r\n\r\n``` bash\r\n  validate-website [OPTIONS]\r\n  validate-website-static [OPTIONS]\r\n```\r\n\r\nDESCRIPTION\r\n===========\r\n\r\nvalidate-website is a web crawler for checking the markup validity with XML\r\nSchema / DTD and not found urls (more info doc/validate-website.txt).\r\n\r\nvalidate-website-static checks the markup validity of your local documents with\r\nXML Schema / DTD (more info doc/validate-website-static.txt).\r\n\r\nHTML5 support with Validator.nu Web Service.\r\n\r\nVALIDATE WEBSITE OPTIONS\r\n========================\r\n\r\n``` bash\r\n  -s, --site SITE\r\n      Website to crawl (Default: http://localhost:3000/)\r\n  -u, --user-agent USERAGENT\r\n      Change user agent (Default: Anemone/VERSION)\r\n  -e, --exclude EXCLUDE\r\n      Url to exclude (ex: redirect|news)\r\n  -i, --ignore-errors IGNORE\r\n      Ignore certain validation errors (ex: autocorrect)\r\n  -f, --file FILE\r\n      Save not well formed or not found (with -n used) urls\r\n  -c, --cookies COOKIES\r\n      Set defaults cookies\r\n  -m, --[no-]markup-validation\r\n      Markup validation (Default: true)\r\n  -n, --not-found\r\n      Log not found url (Default: false)\r\n  --[no-]color\r\n      Show colored output (Default: true)\r\n  -v, --verbose\r\n      Show detail of validator errors (Default: false).\r\n  -q, --quiet\r\n      Only report errors (Default: false).\r\n  -d, --debug\r\n      Show anemone log (Default: false)\r\n  -h, --help\r\n      Show help message and exit.\r\n```\r\n\r\nEXIT STATUS\r\n===========\r\n\r\n* 0: Markup is valid and no 404 found.\r\n* 64: Not valid markup found.\r\n* 65: There are pages not found.\r\n* 66: There are not valid markup and pages not found.\r\n\r\nOn your application\r\n===================\r\n\r\n``` ruby\r\n  require 'validate_website/validator'\r\n  body = '<!DOCTYPE html><html></html>'\r\n  v = ValidateWebsite::Validator.new(Nokogiri::HTML(body), body)\r\n  v.valid? # => false\r\n```\r\n\r\nWith RSpec\r\n==========\r\n\r\nOn spec/spec_helper.rb:\r\n\r\n``` ruby\r\n  require 'validate_website/validator'\r\n  require 'validate_website/rspec'\r\n```\r\n\r\nOn your spec/controllers:\r\n\r\n``` ruby\r\n  it 'should be valid' do\r\n    response.body.should be_w3c_valid\r\n  end\r\n```\r\n\r\nREQUIREMENTS\r\n============\r\n\r\nSee `validate-website.gemspec` file.\r\n\r\nCREDITS\r\n=======\r\n\r\n* Thanks tenderlove for Nokogiri, this tool is inspired from markup_validity.\r\n* And Chris Kite for Anemone web-spider framework.\r\n\r\nMORE INFO\r\n=========\r\n\r\nThe HTML5 support is done by using the Validator.nu Web Service, so the content\r\nof your webpage is logged by a tier. It's not the case for other validation\r\nbecause validate-website use the XML Schema or DTD stored on the data/ directory.\r\n\r\nPlease read http://about.validator.nu/#tos for more info on the HTML5\r\nvalidation service.\r\n\r\nCONTRIBUTORS\r\n============\r\n\r\n* Fran√ßois de Metz (francois2metz)\r\n* Bruno Michel (nono)\r\n* Matt Brictson (mbrictson)\r\n\r\nLICENSE\r\n=======\r\n\r\nThe MIT License\r\n\r\nCopyright (c) 2009-2013 Laurent Arnoud <laurent@spkdev.net>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}